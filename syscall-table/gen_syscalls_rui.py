import ctags, re, simplejson, sys, os
from ctags import CTags, TagEntry

# file generated by ctags --fields=afmikKlnsStz --c-kinds=+pc -R
tags = CTags('tags')
entry = TagEntry()

sct_file = open('arch/x86/kernel/syscall_table_32.S', 'r')

sys_calls = []
i = 0

for line in sct_file:
	name = re.search(".long (\w*)", line)
	if(name):
		name = name.group(1)
		is_ptregs = False
		if(name == "sys_ni_syscall"):
			print '[' + repr(i) + ', \'not implemented\']'
			#sys_calls.append([i, "not implemented", "", "%0#4x"%(i), "", "", "", "", "", "", ""])
			i += 1
			continue
		# take care of ptregs
		elif(name.find('ptregs_') == 0):
			name = name.replace("ptregs_", "sys_")
			is_ptregs = True
		if tags.find(entry, name, ctags.TAG_FULLMATCH | ctags.TAG_OBSERVECASE):
			if(entry['kind'] == 'prototype'):
				found_sym = True
				details = [i, name, entry['signature']]
				if(entry['signature'] != "(void)"):
					sig = entry['signature'].strip('()').split(',')
				else:
					sig = [];
				regs = {};
				print details
			else:
				if(not tags.findNext(entry)):
					sys_calls.append([i, "", "", "", "", "", "", "", "", "", ""])
					break
		i += 1

#print sys_calls
print "Finished!!!"
